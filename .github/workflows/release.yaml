permissions: write-all
on:
 push:
  branches:
    - 'main'
  paths:
    - release-process/version
 workflow_dispatch:

name: Release

jobs:
  build:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11' # install the python version needed
      - name: Install Python packages
        run: |
          cd release-process
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Package
        run: |
          cd release-process
          python release.py example-release-config.yaml
      - name: Get Version Number
        id: get-version-number
        run: |
          VERSION=$(cat release-process/version)
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"
      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          VERSION: ${{ steps.get-version-number.outputs.VERSION }}
        with:
          files: |
            release-process/release/policies.yaml
            release-process/release/bindings.yaml
            release-process/release/crds.yaml
            release-process/release/kustomization.yaml
          name: $VERSION
      # we want to keep the releases in the git repo too
      - name: Push to main        
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Pushing ${{ github.ref_name }} release files
          branch: main
          file_pattern: release-process/release
